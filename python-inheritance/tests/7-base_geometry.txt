>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

integer
----------------

.. code-block:: python

    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("my_int", "test")
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0
    >>> bg.integer_validator("test", -5)
    Traceback (most recent call last):
    ...
    ValueError: test must be greater than 0
    >>> bg.integer_validator("miam", 1.1)
    Traceback (most recent call last):
    ...
    TypeError: miam must be an integer
    >>> bg.integer_validator("my_int", [1, 2])
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented
    >>> bg.integer_validator("my_int", (5, 3))
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", None)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", True)
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer
    >>> bg.integer_validator("my_int", {"toto": 3, "test": 5})
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

